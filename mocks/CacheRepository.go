// mocks/CacheRepository.go
package mocks

import mock "github.com/stretchr/testify/mock"

// CacheRepository is an autogenerated mock type for the CacheRepository type
type CacheRepository struct {
	mock.Mock
}

// Set provides a mock function with given fields: key, data
func (_m *CacheRepository) Set(key string, data []byte) {
	_m.Called(key, data)
}

// Get provides a mock function with given fields: key
func (_m *CacheRepository) Get(key string) ([]byte, bool) {
	ret := _m.Called(key)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Has provides a mock function with given fields: key
func (_m *CacheRepository) Has(key string) bool {
	ret := _m.Called(key)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Delete provides a mock function with given fields: key
func (_m *CacheRepository) Delete(key string) {
	_m.Called(key)
}

// PrintContent provides a mock function with given fields:
func (_m *CacheRepository) PrintContent() {
	_m.Called()
}
