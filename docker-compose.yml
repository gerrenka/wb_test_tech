version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9093:9092"
    networks:
      - kafka_network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: my_database
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - kafka_network

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=my_user
      - DB_PASSWORD=1
      - DB_NAME=my_database
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=orders
      - KAFKA_GROUP_ID=order-consumer-group
      - SERVER_PORT=8081
    networks:
      - kafka_network

volumes:
  postgres-data:

networks:
  kafka_network:
    driver: bridge